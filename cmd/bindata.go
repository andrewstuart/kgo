// Code generated by go-bindata.
// sources:
// templates/.envrc
// templates/.gitignore
// templates/Dockerfile
// templates/Makefile
// templates/config.go
// templates/k8s.yaml
// templates/main.go
// templates/otel.go
// templates/runner.conf
// templates/tracing.go
// DO NOT EDIT!

package cmd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesEnvrc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf7\x37\x34\x34\xf4\xf5\x77\x09\xf5\x71\xb5\xcd\xcf\xe3\x02\x04\x00\x00\xff\xff\x23\xba\x3e\x29\x0f\x00\x00\x00")

func templatesEnvrcBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnvrc,
		"templates/.envrc",
	)
}

func templatesEnvrc() (*asset, error) {
	bytes, err := templatesEnvrcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.envrc", size: 15, mode: os.FileMode(420), modTime: time.Unix(1564034532, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x28\xe0\x2a\xc9\x2d\xe0\x02\x04\x00\x00\xff\xff\x57\x45\x21\xbf\x08\x00\x00\x00")

func templatesGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_templatesGitignore,
		"templates/.gitignore",
	)
}

func templatesGitignore() (*asset, error) {
	bytes, err := templatesGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.gitignore", size: 8, mode: os.FileMode(420), modTime: time.Unix(1551887816, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcf\xcf\x49\xcc\x4b\xb7\x4a\xcc\x29\xc8\xcc\x4b\xe5\x72\xf5\x0b\x09\x8a\x0c\xf0\xf7\xf4\x0b\x51\xd0\x4f\x2c\x28\xe0\x0a\xf7\x0f\xf2\x76\xf1\x0c\x52\xd0\x4f\xcf\xd7\x2f\x2e\x4a\x06\x8b\x71\x39\xba\xb8\x28\x24\x16\x14\x28\xe8\x73\x01\x02\x00\x00\xff\xff\xcd\x75\x7e\xe4\x42\x00\x00\x00")

func templatesDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfile,
		"templates/Dockerfile",
	)
}

func templatesDockerfile() (*asset, error) {
	bytes, err := templatesDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile", size: 66, mode: os.FileMode(420), modTime: time.Unix(1636764845, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x91\xc1\x8e\x9b\x30\x10\x86\xcf\xcc\x53\x8c\x56\x3e\xd8\x52\x71\xb6\xb7\x0a\x89\x83\x1b\x28\xbb\x6a\x37\x50\xd8\x7b\x42\xc0\x21\x28\x06\xa3\xd8\x48\x89\x10\xef\x5e\xc5\xa1\xb4\x27\xd0\x7c\xf6\x37\xff\x8c\x45\x96\x85\xd3\x84\x7c\x57\x76\x12\xe7\x19\xde\x3f\x44\x12\xbb\xca\x7b\x57\x36\xae\x14\xa5\xdb\x9f\x71\xbe\xcf\xd3\xf4\xd3\x81\x48\x57\x17\x79\xcd\xb5\xb6\x0f\xba\x13\x1f\x71\x91\x89\x6d\xbc\x6a\xcc\x50\x56\xee\x22\xfc\xf8\xfd\x29\x92\x90\xd0\xff\x0c\x6c\x43\xa8\xeb\xc1\x00\x8a\x37\x11\x12\x6a\xce\x52\x29\xac\x9d\x14\xdb\xde\x0c\xb2\xb2\xe8\xfb\x27\x7d\xed\x4a\x8b\x2f\xd3\x74\x98\x26\x6c\xfb\x5a\xde\x90\xe7\x72\xd0\x51\xdb\x48\x63\x0d\xbe\xe2\x3c\x1f\xe6\xf9\x05\x09\xfd\xca\x18\x80\x95\xc6\x06\xe0\x35\x1a\x1f\x7f\xc8\x37\x9c\x73\x80\x46\x07\xe0\x6d\x93\x74\x1f\xef\xc4\xf7\x5f\x71\x14\xbe\x62\x92\xa6\x45\xa8\xda\x7e\xbc\x61\xa3\xf1\x38\xb6\xaa\x46\x5f\x63\x39\x0c\x00\xcf\x18\x01\x2e\x16\xf0\x96\x5c\xcb\x29\x8b\x84\xba\xa1\x18\x72\x5c\xe1\x30\x9a\xf3\x0a\x00\x6a\x39\x28\x7d\x0f\x96\x91\xc0\xbb\x8c\x47\x59\x59\xf5\x68\xa0\xee\xe8\x9f\xf0\xf2\xcd\xf0\x7b\xd9\xa9\x7f\xc8\xf7\xfb\x75\x71\x84\xae\x2b\x65\x68\xa4\xc5\xd6\x3d\xc4\xd3\xda\xc9\xde\x6e\x08\x15\x59\xc6\xf0\xf9\x09\x09\xad\x4a\xa5\xb0\x78\x13\x5f\xfe\x66\x60\xf0\x27\x00\x00\xff\xff\x51\xf2\x28\x5d\xd7\x01\x00\x00")

func templatesMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefile,
		"templates/Makefile",
	)
}

func templatesMakefile() (*asset, error) {
	bytes, err := templatesMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile", size: 471, mode: os.FileMode(420), modTime: time.Unix(1636764852, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xc1\x6a\xdc\x30\x10\x3d\x5b\x5f\x31\x15\x3d\xc8\xa5\x68\x29\xbd\xb5\xec\x21\xa4\x86\x96\xd2\x24\x24\xd0\x3d\x06\x55\x1e\xcb\xa2\xb6\x64\xc6\x23\xb7\x61\xeb\x7f\x2f\xb2\x77\x43\x36\x6c\x0b\xb9\x18\x31\xef\xcd\x7b\xcf\x4f\x1a\x8c\xfd\x69\x1c\x42\x6f\x7c\x10\xc2\xf7\x43\x24\x06\x25\x0a\x39\x32\xf9\xe0\x46\x29\x44\x21\x9d\xe7\x36\xfd\xd0\x36\xf6\x9b\x66\x0c\x91\x7d\xf3\xf0\x78\x90\xa7\xf8\xe8\x29\x0d\x23\x86\x4d\x17\x1d\xa5\xf1\x39\x3a\x34\xef\xde\x6f\x26\x3f\x20\x49\x51\x0a\x31\x19\xca\x66\x9d\x83\x2d\xac\x0b\xfa\x0a\x7f\xa9\x32\x63\x4d\x0a\x16\x46\xe4\x34\x5c\xc6\xd0\x78\xa7\x4a\x78\xb3\x6c\xea\xef\xf9\x0b\x7b\x51\xd8\xc6\xc1\x87\x2d\xac\xd3\x75\x31\xcf\xf4\x45\x5d\xaf\x3b\x37\x86\x5b\x25\xb5\x3c\x3f\x7f\xfd\xf9\xfa\x5b\xb5\xd9\xef\x41\x5f\x99\x1e\x61\x9e\xff\xc1\xdb\x20\xdb\x67\xb4\x95\x77\x87\xbc\xf2\x32\xa0\xe4\x19\xa5\x3b\xe4\x2a\x4c\x37\x84\x8d\xff\xfd\x84\xf0\x07\xd2\x90\xff\xe1\x54\xeb\x13\x36\x26\x75\xac\x64\x30\x3d\xca\xb7\xf0\x5f\xfe\x45\xe2\xd8\x1b\xf6\xb6\x0a\x93\x3a\x71\xfb\x8a\x0f\xb7\x38\x74\xc6\x22\xa9\xc3\x2d\xe6\x72\x1e\x67\x52\x67\xed\x7b\x59\x66\x29\xdf\x00\x12\xe5\x16\xb3\xc0\x2d\x9a\xfa\x4b\x38\xf6\xfd\x71\x81\x5e\x6d\x21\xf8\x2e\xd7\x5d\x74\x4e\xef\x3c\xb7\x15\x51\x24\x85\x44\xa5\x5e\x8f\xd2\xc6\xd4\xd5\x10\x22\x03\xa1\xa9\xc1\x07\xcf\xde\x74\x60\x17\xa1\xdc\xc5\x7c\x48\x7d\x7d\x10\xbf\x6c\x4d\x70\xa8\xf2\x1d\xab\x7b\x38\xbe\x25\x5d\x4d\x18\xb8\x5c\xbc\x5e\x14\xec\x4c\xb2\x9d\xa1\x70\x1a\xac\x8b\xa6\x7e\x12\xa9\x98\x45\x31\xe7\x0a\x5c\x5c\x2c\x76\x86\x6d\x7b\x74\x10\xa2\x20\xe4\x44\x21\x43\x62\x16\x7f\x03\x00\x00\xff\xff\xf2\xeb\x80\xb3\x27\x03\x00\x00")

func templatesConfigGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGo,
		"templates/config.go",
	)
}

func templatesConfigGo() (*asset, error) {
	bytes, err := templatesConfigGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.go", size: 807, mode: os.FileMode(420), modTime: time.Unix(1647024160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesK8sYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x0c\xa1\x0b\xed\xc1\x8e\xd3\xd3\x22\xe8\xa1\xb0\x97\x85\x36\x84\x16\x7a\x9f\xc8\x93\x44\x44\x5f\x95\xc6\xdb\x06\xe3\xff\x5e\x26\xb1\x5d\x27\xbb\x7b\x8b\x4e\xd2\xbc\x99\xd1\xd3\xbc\x27\x8c\xe6\x17\xa5\x6c\x82\x57\x80\x31\xe6\xe5\xcb\xaa\x38\x1a\xdf\x28\x78\xa2\x68\xc3\xc9\x91\xe7\xc2\x11\x63\x83\x8c\xaa\x00\xf0\xe8\x48\x41\xd7\x41\xb5\x46\x47\xd0\xf7\x43\x2c\x47\xd4\x33\xe0\x7c\x14\x34\x47\xd2\x52\x97\x28\x5a\xa3\x31\x2b\x58\x15\x00\x99\x2c\x69\x0e\x49\x10\x00\x87\xac\x0f\xdf\x70\x4b\x36\x5f\x02\x20\x5c\x6e\x6f\x61\x72\xd1\x22\xd3\x50\x33\xe3\x24\xcb\x5e\x95\xbf\xd9\x00\x60\x24\x23\x4b\x07\xcf\x68\x3c\xa5\xa9\xa8\x7c\xf3\x71\x97\x65\x1c\xee\x07\xe8\x29\xe8\x23\xa5\x1f\x21\x30\xf4\xfd\x52\x22\xcf\x02\xbe\xca\xde\xb4\xd6\x6e\x82\x35\xfa\xa4\xe0\xab\xfd\x83\xa7\x3c\xe1\x89\x72\x68\x93\xa6\x19\x5f\x09\xfe\x6e\x29\xf3\x55\x0c\x40\xc7\x56\xc1\xaa\xae\xdd\x55\xd4\x91\x0b\xe9\xa4\xe0\x73\x5d\x7f\x37\x13\x12\x43\x9a\x97\x97\xff\xdf\xb8\x09\x89\x15\x3c\xd6\x8f\x75\x51\x96\x65\x31\x57\x7d\x12\xfc\x27\xa5\x17\xa3\xe9\x2e\x6a\x4f\x4c\xca\xf3\x56\xae\x3e\xd3\x62\x4c\x7b\xe2\x19\x9b\x5b\x2b\xbc\x92\xad\xeb\xc0\xec\xa0\x7a\xf6\xfb\x44\x39\x43\xdf\x77\x1d\x7c\x30\x7e\x0f\xea\x0b\xc4\x64\x3c\xef\x60\xf1\x90\xab\x87\xbc\x18\x6a\x3e\x36\xb4\xc3\xd6\xb2\x08\xe5\xd0\x78\x58\x60\xe6\x16\x13\x57\x3a\x2c\x3e\x49\xcb\xdb\x09\xd0\x5f\x26\x2f\x5b\x71\xff\x96\x18\xc7\x89\x0c\x97\xde\x65\x22\x6c\x87\x79\x64\xd2\x89\x78\x3d\xb6\x39\xbf\xa5\xef\x2b\xb6\x17\x7b\x1c\xc2\x64\x81\x72\x86\xcb\x0f\x6a\x2d\x0d\x3d\x24\x49\x5d\xa3\x00\x07\xe6\x38\x8a\x1f\x91\x0f\x33\x5f\xcb\x51\xc1\x72\x72\xc6\x16\xf5\x91\x7c\x33\x77\x5a\xbe\xa8\xbf\x7e\xf7\x07\x4c\x29\xa3\x7a\x22\x0d\xf9\x46\x72\xfe\x05\x00\x00\xff\xff\x62\xda\x84\x0d\x46\x04\x00\x00")

func templatesK8sYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesK8sYaml,
		"templates/k8s.yaml",
	)
}

func templatesK8sYaml() (*asset, error) {
	bytes, err := templatesK8sYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/k8s.yaml", size: 1094, mode: os.FileMode(420), modTime: time.Unix(1565288430, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4d\x6f\xeb\x36\x10\x3c\x93\xbf\x62\xc1\x13\x95\x3a\x54\x0a\x14\x45\x60\x20\x87\x20\x45\x9a\x1c\x9a\x04\x71\x8b\x1c\x8a\x22\x60\xa4\x95\x44\x98\x22\xd5\xe5\xca\x76\xea\xea\xbf\x3f\x50\xb6\xdf\x0b\xde\xc7\x91\xb3\x3b\x9c\xd9\x9d\x1d\x6c\xb5\xb6\x2d\x42\x6f\x5d\x90\xd2\xf5\x43\x24\x06\x2d\x85\x6a\x7a\x56\x52\xa8\x80\x5c\x76\xcc\x83\x92\x52\x74\x68\x3d\x77\xa0\x6c\xe2\xd1\x12\x9b\x2a\x96\x6d\x3c\x3f\xa0\x55\x87\xd5\x3a\x13\x5a\xc7\xdd\xf8\x66\xaa\xd8\x97\x6d\x24\xe7\xbd\x2d\x3b\x1b\x6a\x8f\x94\x7e\x50\xee\xc7\xdd\x37\x95\x61\x6c\x9a\xb2\x8f\x84\x55\x0c\x8c\x3b\x56\xb2\x90\x72\x63\x29\x5b\xeb\x91\x91\xe0\x0a\x5a\x1f\xdf\xac\x37\x7f\xe4\xa7\x56\xfb\x3d\x98\x07\xdb\x23\xfc\x0f\x1c\x7d\xdc\x22\xc1\x34\xa9\x05\xf4\xc8\xe4\x2a\xf3\xe2\xb8\xfb\x0d\x53\x45\x6e\x60\x17\x83\x56\xec\x7a\x04\xb6\x6b\x0c\xd0\x44\x82\xc1\x55\x50\xc7\x6d\xf0\xd1\xd6\xaa\x28\xa4\xa8\x98\x00\xe0\x0a\x66\x35\xf3\x80\xdb\xfb\xc0\xbf\xfe\x72\xe7\x12\xc7\x96\x6c\xaf\x55\x87\xde\xc7\xd7\x6d\x24\x5f\xbf\x7a\xcb\x18\xaa\x77\xb5\x00\x17\x12\xd3\xd8\x63\xe0\x59\xf2\xaf\xe0\x58\x8f\xc1\xb1\x59\xe5\x51\xea\xa2\xc8\x83\xc8\x66\x0c\xd5\xbc\x72\x5d\xc0\x3e\x6b\xed\x60\x79\x05\x1f\xe6\x35\xb7\x91\x56\xae\x0d\xd6\x27\x5d\x48\x91\x90\xc7\xe1\x91\xd1\xeb\x8a\x77\xd9\x5c\xd3\x66\xc2\x0c\xdf\xc4\xd0\xb8\x36\x77\xf9\xd6\xdc\x87\x26\x6a\x95\xd8\x12\x63\xad\x0a\x29\x05\xe1\xdc\x7a\x48\x29\xcf\xf1\x8c\xad\x4b\x4c\xef\x99\x41\xb3\xec\xb8\x9b\xf1\x38\xe6\x45\x66\xd4\x3c\x59\xee\xb4\x2a\x0f\x24\x55\x98\xbb\x43\x82\x9a\xb0\xcd\x7f\xda\xc1\x65\xe2\xa1\xef\x89\xb0\x71\x3b\xad\x4a\x3b\xb8\x72\xf3\xb3\x2a\xcc\x6a\x7c\xa3\xd3\x67\x73\xf3\xe9\xbf\x2f\x3f\xdd\x8e\xa1\xd2\xf3\x16\xf4\x16\xf2\x7d\x99\x67\x4c\x43\x0c\x09\x5f\xc8\x31\xd2\x02\x08\xce\x8e\xf8\xbf\x23\x26\x9e\xf7\x24\x6a\x6c\x90\x20\x47\x97\x1d\xff\xe9\x7a\xa4\xf5\x5a\x4a\x21\x9a\x9e\xcd\xed\x40\x2e\x70\xa3\xb7\x0b\x38\x84\x03\x0a\x7e\x82\xaa\x69\xcd\xef\xc8\x2b\x26\x17\x5a\xad\x82\xed\x71\xce\x77\xca\xde\x12\x6d\xe6\xe5\x64\xa1\x15\xd2\x06\x29\xab\x5c\xd7\x35\x2d\x41\x2d\x2f\x2f\x2e\x2f\xd4\x42\x0a\xb1\xdf\x83\x6b\xc0\xdc\x3c\x3e\xaf\xe0\x7c\x9a\xa4\x10\xc7\x31\x96\x70\xba\xed\xb9\xa8\xa5\x10\xe2\x33\x72\xed\xf3\x19\xd6\x77\x68\x6b\xa4\xa4\xff\xfe\x27\xcd\x1e\xf6\xea\x7a\xe4\x2e\x92\xfb\xcf\xe6\x4b\x54\x53\xb1\xf8\x1e\xed\x91\x5c\xeb\xc2\x47\xda\xd9\xb1\xb5\xd0\x54\x1c\x5d\xa1\x4f\xf8\xb5\x23\x3a\xd5\x42\x7d\x28\x4d\x52\x4e\xf2\x53\x00\x00\x00\xff\xff\x39\xb9\x52\x54\xe8\x03\x00\x00")

func templatesMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainGo,
		"templates/main.go",
	)
}

func templatesMainGo() (*asset, error) {
	bytes, err := templatesMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.go", size: 1000, mode: os.FileMode(420), modTime: time.Unix(1647024729, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOtelGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x5b\x6f\x33\x35\x10\x7d\xb6\x7f\x85\xb1\x84\xb4\x8b\xc2\x2e\x1f\x20\x55\xaa\xd4\x07\x68\xa9\x40\x90\x52\x35\x5c\x9e\x5d\xef\x64\x63\xd5\x6b\x9b\xf1\x6c\x9a\xaa\xea\x7f\x47\xf6\xee\xe6\xa6\x36\x2d\xe8\x7b\x49\xa2\xb9\x1e\x9f\x39\x33\x09\x4a\x3f\xa8\x16\x44\xa7\x8c\xe3\xdc\x74\xc1\x23\x89\x82\x33\xa9\xbd\x23\xd8\x90\xe4\x4c\x5a\xdf\xa6\x2f\x32\x1d\x48\xce\x99\x6c\x7d\xe5\x03\x38\x02\x0b\x1d\x10\x3e\x55\xc6\xd7\x9e\xc0\xca\x13\xbe\x5a\x11\xa1\xb9\xef\x09\x4e\x46\xc1\x26\x01\x00\x8c\xb5\x27\x1b\xf2\x47\x0a\x30\xfa\xff\x65\xed\xfd\x6c\x31\xfc\xe7\x22\x84\x4a\xc3\xee\xd7\xbb\x25\xc6\xa6\xad\xf5\xf7\xea\x34\x1b\x01\x7d\x50\xad\x22\xe3\x9d\xe4\x2c\x71\x8d\xde\x5a\x40\xf1\x76\x4a\x6c\x1e\xa6\x06\xbb\xf8\xfa\x5e\xc5\x4c\x4e\x40\xaf\x21\x46\xff\xc1\x0a\xdb\xf0\x6d\x81\x0f\xa5\x45\xb0\xa0\xc9\x63\x1d\x4d\x17\xec\xe9\x51\xa6\x34\x84\xe8\x7b\xd4\xef\x07\x66\x7e\x25\x67\x11\x3a\xed\xdd\xfa\xd4\x23\x86\x88\x7a\xfd\xa9\x3a\xab\xbe\x91\xbc\xe4\x7c\xd9\x3b\x2d\x22\x50\x1f\x7e\x27\xb0\x85\xa6\x8d\x18\xd5\x5b\x5d\x0e\xdf\xa5\x78\xe6\xac\xae\xc5\x1f\xa9\x4d\xe4\x8c\x70\x26\x00\x51\x9c\x5f\x88\x83\xe9\x56\x37\xf0\x98\xf2\x67\x47\xe6\xbf\x0d\xad\x7e\x72\x4d\xf0\xc6\x51\x21\x0f\x80\x7d\xad\xd3\x20\x12\x29\xd5\x1b\xf6\xf3\xef\xbf\xfb\x74\x26\xcb\xd7\x6a\xfe\xe2\x22\xe8\x1e\xa1\x28\x4b\xce\xcc\x32\x63\xfa\xe2\x42\x38\x63\x13\x60\x66\x7d\x5b\x5d\x2b\x52\xb6\x00\xc4\x92\xb3\x17\xce\x10\xe2\x16\xfa\xc4\x6e\x35\x07\x6c\xa1\xe0\x8c\x6d\x2d\x57\xb0\x54\xbd\xa5\xa2\x9c\xed\x5b\x6f\xe0\x31\x75\xfd\x61\x5a\xc5\x98\x72\x26\xce\xab\x85\x5e\x41\xa7\xfe\xbc\xfb\x6d\x76\x60\x05\x5c\x1b\x0d\x37\xaa\x83\x5f\xe1\xa9\x5a\x10\x1a\xd7\x16\x12\xa1\x69\x0c\x85\xf8\x8f\x95\xe5\x6b\xf1\x7f\x01\x46\xe3\xdd\x7e\x4a\x03\x6b\xb0\x3e\x8c\xf1\xdb\x7b\xb0\xf5\x83\x5b\xcb\x99\x90\x01\x7d\xd3\xeb\xbc\x19\x39\x32\x7d\x7c\x94\x9d\xa4\x90\x6a\x01\x94\xe7\x8c\xb7\xe8\xd7\xa6\x01\x2c\x32\xe9\xe9\xf5\x47\x76\xce\xd8\xe0\x4a\xac\xdc\x8d\x2c\x15\x08\x31\x37\xde\xb9\x7e\x54\xa4\x57\xb9\x4e\x06\x53\xee\x35\x82\x0d\xcd\x55\xb8\x1d\xd7\xd9\x63\xb1\xb7\xd9\x55\x6e\x37\x4a\xf0\xf9\xa5\xe4\x59\x83\xf3\xbc\x4a\x91\x33\x6d\x0d\x38\x9a\x34\xb8\xbb\x52\x09\xe8\x65\xf6\x15\x47\x8e\xcf\x27\xc3\xa3\xa2\x07\x3a\x84\x4d\x38\xd8\x8e\x21\x76\xb7\x1a\x03\xee\xd3\x23\x59\x16\xf2\x5a\x19\x0b\x8d\x20\x2f\x34\x82\x22\x10\xb4\x02\xb1\x45\x23\xa6\x73\x7b\x2e\xbe\x4c\x63\x9f\x46\xc8\x59\xe8\xe3\x0a\x72\xf3\xdd\x99\xcb\xcd\x39\xdb\x5d\xb9\x64\xb8\x56\xa9\xd0\xd3\xa0\xe1\x7c\x8f\x26\x81\xff\x6c\x22\xf9\x16\x55\x77\x65\xe2\xa0\x32\xe3\xdd\xb0\x0b\xf9\x75\xa3\xaa\xf6\xee\xee\x40\xed\x08\xa9\x80\x4d\x78\xcd\x7f\x39\x80\xbf\x05\x34\xbe\x29\xbe\xfd\x2a\xfd\x21\x56\x0b\xd0\xde\x35\xa3\x48\x87\xcb\x9f\x84\x31\x07\xda\x13\xda\xf0\xa6\x92\xbf\xf0\x7f\x03\x00\x00\xff\xff\xb3\xd4\xe8\x78\x70\x07\x00\x00")

func templatesOtelGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesOtelGo,
		"templates/otel.go",
	)
}

func templatesOtelGo() (*asset, error) {
	bytes, err := templatesOtelGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/otel.go", size: 1904, mode: os.FileMode(420), modTime: time.Unix(1647024633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRunnerConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x48\x2b\x4a\x2d\xce\x50\x48\xce\xcf\x4b\xcb\x4c\xe7\xe2\xca\x4c\xcf\xcb\x2f\x4a\x4d\xb1\x52\x28\x4f\x4d\xd2\x51\x28\xc9\x2d\xd0\x51\x48\x2c\x2e\x4e\x2d\x29\xe6\x02\x04\x00\x00\xff\xff\x3c\xbc\xcd\x0e\x2a\x00\x00\x00")

func templatesRunnerConfBytes() ([]byte, error) {
	return bindataRead(
		_templatesRunnerConf,
		"templates/runner.conf",
	)
}

func templatesRunnerConf() (*asset, error) {
	bytes, err := templatesRunnerConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/runner.conf", size: 42, mode: os.FileMode(420), modTime: time.Unix(1551887851, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTracingGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4f\x6b\x1b\x3f\x10\x3d\x4b\x9f\x42\x3f\x9d\xb4\x60\xe4\x5f\x4f\x85\x42\x0e\x6d\xda\x42\x69\xe3\x86\xb8\x7f\xce\xaa\x3c\x5e\x8b\x68\x35\x62\x76\x76\xe3\x60\xf6\xbb\x17\xed\xda\x8e\x13\xc2\xd2\x8b\x10\xef\xbd\xd1\x9b\x79\x9a\xec\xfc\xbd\xab\x41\x35\x2e\x24\x29\x43\x93\x91\x58\x19\x29\x74\xc4\x5a\x4b\x29\x74\x8d\x16\x33\x24\x86\x08\x0d\x30\x3d\xda\x80\x4b\x64\x88\x7a\x86\x5b\x3a\x66\x0a\x7f\x3a\x86\x59\x15\xec\x8b\x1b\x50\xbb\x44\x8e\x79\x3c\x98\x9c\x87\xa7\x5b\x4d\xd9\xcf\x3e\x91\x09\xb3\xab\x1d\x07\x4c\xb3\xba\x76\x73\xbf\x24\x68\xb1\x23\x3f\xdf\x53\x11\x8e\xd6\x5a\x8a\x16\x1a\x8f\xa9\x57\x33\xea\x49\xb1\xec\xdf\xd8\xb7\xf6\x7f\x2d\x2b\x29\xb7\x5d\xf2\x2a\xa4\xc0\xa6\x52\x07\x29\x98\x16\x0a\x88\xd4\xbb\x2b\xf5\x6c\x2a\xbb\x82\x07\xe3\x79\xbf\x78\x01\xff\x0e\xbc\xfb\x94\x36\x19\x43\x62\xa3\x0f\x07\x65\xbf\x33\x44\x7b\x8d\x31\x82\x67\xa4\x13\xa7\x86\x41\x57\xaf\x15\x7f\x49\x2d\xf8\x8e\xc0\x54\x95\x14\x61\x3b\x9a\xff\x77\xa5\x52\x88\xa5\x1d\x11\xb1\xb6\x9f\x1d\xbb\x68\x80\xa8\x92\x62\x90\x82\xa0\x3d\xf7\x78\xca\xc8\xde\x00\xd5\x60\xa4\x10\x67\xe4\x23\x6c\x5d\x17\xd9\x54\x8b\x4b\x74\x05\x0f\xc5\xf5\xfd\xe9\xc3\xdb\x52\x73\x4a\xce\xae\xfd\x0e\x1a\xf7\xf3\xee\xdb\xe2\x19\x0a\xd4\x07\x0f\x2b\xd7\xc0\x57\x78\xb4\x6b\xa6\x90\xea\x69\xd8\x82\x4d\xa3\xbd\x52\xf0\x0b\xa8\x0d\x98\x2e\x6b\x36\xd0\x43\xc4\x7c\xd4\x9f\xd7\xee\xcc\x43\xea\xf5\x42\xe9\x4c\xb8\x99\x34\xe5\xf8\xd7\x60\xca\x17\xdb\x35\xf0\x8f\x12\x30\xdd\x12\xf6\x61\x03\x64\xc6\xbc\xcb\xe0\x2f\x70\x29\xc4\x44\x95\x40\xee\x8e\x01\x19\x82\x76\x34\x7e\xa2\x3e\x38\xf6\xbb\xf1\x9d\xb1\x99\xea\xc2\x08\xf6\x7c\xe3\xf2\xed\x71\xa9\x91\xcc\xc5\x7e\xdb\xd1\xee\x1a\x13\xc3\x9e\x0f\x43\x25\x07\xf9\x37\x00\x00\xff\xff\x54\xa9\x24\x00\xbd\x03\x00\x00")

func templatesTracingGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesTracingGo,
		"templates/tracing.go",
	)
}

func templatesTracingGo() (*asset, error) {
	bytes, err := templatesTracingGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tracing.go", size: 957, mode: os.FileMode(420), modTime: time.Unix(1637593097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.envrc": templatesEnvrc,
	"templates/.gitignore": templatesGitignore,
	"templates/Dockerfile": templatesDockerfile,
	"templates/Makefile": templatesMakefile,
	"templates/config.go": templatesConfigGo,
	"templates/k8s.yaml": templatesK8sYaml,
	"templates/main.go": templatesMainGo,
	"templates/otel.go": templatesOtelGo,
	"templates/runner.conf": templatesRunnerConf,
	"templates/tracing.go": templatesTracingGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".envrc": &bintree{templatesEnvrc, map[string]*bintree{}},
		".gitignore": &bintree{templatesGitignore, map[string]*bintree{}},
		"Dockerfile": &bintree{templatesDockerfile, map[string]*bintree{}},
		"Makefile": &bintree{templatesMakefile, map[string]*bintree{}},
		"config.go": &bintree{templatesConfigGo, map[string]*bintree{}},
		"k8s.yaml": &bintree{templatesK8sYaml, map[string]*bintree{}},
		"main.go": &bintree{templatesMainGo, map[string]*bintree{}},
		"otel.go": &bintree{templatesOtelGo, map[string]*bintree{}},
		"runner.conf": &bintree{templatesRunnerConf, map[string]*bintree{}},
		"tracing.go": &bintree{templatesTracingGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

